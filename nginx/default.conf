server {
    listen       80;
    server_name  jcrop;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    error_page 503 /applications/maintenance/index.html;
    error_page 500 /applications/maintenance/internal.html;

    location /pages {
      rewrite ^/pages/([^/\.]+)/([^/\.]+)[/]?(.*)? /index.php?f=$1&p=$2&urljunk=$3;
      rewrite ^/pages[/]?([^/\.]+)?[/]? /index.php?f=&p=$1;
    }

    #if ($host !~* ^ort\.achos\.nl){
    #  rewrite ^(.*)$ https://ort.achos.nl$1 permanent;
    #}

    location /images {
      access_log off;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";
      expires 1d;
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /fonts{
      access_log off;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";
      expires 1d;
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /css{
      access_log off;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";
      expires 1d;
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /js{
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /swf{
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /applications{
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /downloads{
      location ~ \.php$ {return 403;}
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /temp{
      try_files $uri ../framework/$uri /fileloader.php;
    }

    location /awstats{
    deny all;
    }

    location / {
        try_files $uri /index.php$is_args$args;
    }


    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
